#!/bin/bash

shopt -s extglob
set -e

branch=${1:-cedar-14-chroot}
destroy=${2:-0}
waitfor=${3:-0} # used when testing

# create a temporary directory and copy
# the test application to it
dir=$(mktemp -d)
cp -r . $dir
pushd $dir

# commit to git for push to heroku
git init
git add --all
git commit -m "initial"

# create the app
heroku create --stack cedar-14

# trick to get the app name
app=$(heroku apps:info -j | jq -r '.app.name')
url=$(heroku apps:info -j | jq -r '.app.web_url')

# add buildpacks for node.js and R
heroku buildpacks:add https://github.com/heroku/heroku-buildpack-nodejs --app $app
heroku buildpacks:add https://github.com/virtualstaticvoid/heroku-buildpack-r#$branch --app $app

git push heroku master

popd

# browse to the web application
if [ -z $DESKTOP_SESSION ]; then
  sleep 10
  curl $url --verbose
else
  heroku open --app $app
fi

# wait?
if [[ "$waitfor" -ne "0" ]]; then

  sleep $waitfor

  # output log
  heroku logs --num 1000 --app $app

fi

# destroy the app, and clean up temporary files
if [[ "$destroy" -eq "1" ]]; then

  # clean up
  heroku apps:destroy $app --confirm $app
  rm -rf $dir

else

  trap ctrl_c INT

  function ctrl_c() {
    # clean up
    heroku apps:destroy $app --confirm $app
    rm -rf $dir
  }

  # tail the log, Ctrl+C to stop
  echo "Press CTRL+C to STOP"
  heroku logs --tail --app $app

fi
